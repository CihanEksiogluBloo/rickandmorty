{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport createDataContext from \"./createDataContext\";\nimport rmApi from \"../api/rmApi\";\n\nvar episodeReducer = function episodeReducer(state, action) {\n  switch (action.type) {\n    case \"fetch_episodes\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        episodes: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar fetchEpisodes = function fetchEpisodes(dispatch) {\n  return function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(rmApi.get(\"/episode\"));\n\n          case 2:\n            response = _context.sent;\n            dispatch({\n              type: \"fetch_episodes\",\n              payload: response.data.results\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar _createDataContext = createDataContext(episodeReducer, {\n  fetchEpisodes: fetchEpisodes\n}, {\n  episodes: []\n}),\n    Provider = _createDataContext.Provider,\n    Context = _createDataContext.Context;\n\nexport { Provider, Context };","map":{"version":3,"sources":["C:/Users/Cihan/Desktop/RN-Dosya/RickAndMorty/rickandmorty/src/contexts/EpisodeContext.js"],"names":["createDataContext","rmApi","episodeReducer","state","action","type","episodes","payload","fetchEpisodes","dispatch","get","response","data","results","Provider","Context"],"mappings":";;;;;;;AAAA,OAAOA,iBAAP;AACA,OAAOC,KAAP;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,6CAAYF,KAAZ;AAAmBG,QAAAA,QAAQ,EAAEF,MAAM,CAACG;AAApC;;AACF;AACE,aAAOJ,KAAP;AAJJ;AAMD,CAPD;;AASA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD;AAAA,SAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACXR,KAAK,CAACS,GAAN,CAAU,UAAV,CADW;;AAAA;AAC5BC,YAAAA,QAD4B;AAElCF,YAAAA,QAAQ,CAAC;AAAEJ,cAAAA,IAAI,EAAE,gBAAR;AAA0BE,cAAAA,OAAO,EAAEI,QAAQ,CAACC,IAAT,CAAcC;AAAjD,aAAD,CAAR;;AAFkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;AAAA,CAAtB;;AAKO,yBAA8Bb,iBAAiB,CACpDE,cADoD,EAEpD;AACEM,EAAAA,aAAa,EAAbA;AADF,CAFoD,EAKpD;AACEF,EAAAA,QAAQ,EAAE;AADZ,CALoD,CAA/C;AAAA,IAAQQ,QAAR,sBAAQA,QAAR;AAAA,IAAkBC,OAAlB,sBAAkBA,OAAlB","sourcesContent":["import createDataContext from \"./createDataContext\";\r\nimport rmApi from \"../api/rmApi\";\r\n\r\nconst episodeReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"fetch_episodes\":\r\n      return { ...state, episodes: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst fetchEpisodes = (dispatch) => async () => {\r\n  const response = await rmApi.get(\"/episode\");\r\n  dispatch({ type: \"fetch_episodes\", payload: response.data.results });\r\n};\r\n\r\nexport const { Provider, Context } = createDataContext(\r\n  episodeReducer,\r\n  {\r\n    fetchEpisodes,\r\n  },\r\n  {\r\n    episodes: [],\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}