{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Cihan\\\\Desktop\\\\RN-Dosya\\\\RickAndMorty\\\\rickandmorty\\\\src\\\\screen\\\\EpisodesScreen.js\";\n\nimport React, { useContext, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Button, Text } from \"react-native-elements\";\nimport { Context as EpisodeContext } from \"../contexts/EpisodeContext\";\n\nvar EpisodesScreen = function EpisodesScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(EpisodeContext),\n      fetchEpisodes = _useContext.fetchEpisodes,\n      state = _useContext.state;\n\n  useEffect(function () {\n    fetchEpisodes();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, state.episodes.length > 0 ? React.createElement(FlatList, {\n    data: state.episodes,\n    keyExtractor: function keyExtractor(item) {\n      return item.episode;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"EpisodeDetail\");\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 18\n        }\n      }, React.createElement(View, {\n        style: {\n          alignItems: \"center\",\n          marginVertical: 5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          margin: 5,\n          padding: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 250,\n          height: 73\n        },\n        source: {\n          uri: \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b1/Rick_and_Morty.svg/320px-Rick_and_Morty.svg.png\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: {\n          alignItems: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        h4: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, item.name), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }\n      }, item.episode), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }, item.air_date))));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\nexport default EpisodesScreen;","map":{"version":3,"sources":["C:/Users/Cihan/Desktop/RN-Dosya/RickAndMorty/rickandmorty/src/screen/EpisodesScreen.js"],"names":["React","useContext","useEffect","Button","Text","Context","EpisodeContext","EpisodesScreen","navigation","fetchEpisodes","state","flex","episodes","length","item","episode","navigate","alignItems","marginVertical","margin","padding","width","height","uri","name","air_date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;;;;;AAEA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,uBAA7B;AACA,SAASC,OAAO,IAAIC,cAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACzC,oBAAiCP,UAAU,CAACK,cAAD,CAA3C;AAAA,MAAQG,aAAR,eAAQA,aAAR;AAAA,MAAuBC,KAAvB,eAAuBA,KAAvB;;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGD,KAAK,CAACE,QAAN,CAAeC,MAAf,GAAwB,CAAxB,GACC,oBAAC,QAAD;AACA,IAAA,IAAI,EAAEH,KAAK,CAACE,QADZ;AAEA,IAAA,YAAY,EAAE,sBAACE,IAAD;AAAA,aAAUA,IAAI,CAACC,OAAf;AAAA,KAFd;AAGA,IAAA,UAAU,EAAE,2BAAc;AAAA,UAAXD,IAAW,SAAXA,IAAW;AACxB,aAAO,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAMN,UAAU,CAACQ,QAAX,CAAoB,eAApB,CAAN;AAAA,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACP,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,QAAd;AAAuBC,UAAAA,cAAc,EAAC;AAAtC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAE,CADH;AAELC,UAAAA,OAAO,EAAE;AAFJ,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,MAAM,EAAE;AAAtB,SADT;AAEE,QAAA,MAAM,EAAE;AACNC,UAAAA,GAAG,EAAE;AADC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF,EAeE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLN,UAAAA,UAAU,EAAE;AADP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAM,QAAA,EAAE,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAUH,IAAI,CAACU,IAAf,CALF,EAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOV,IAAI,CAACC,OAAZ,CANF,EAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOD,IAAI,CAACW,QAAZ,CAPF,CAfF,CADO,CAAP;AA2BD,KA/BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAmCG,IArCN,CADF;AAyCD,CAhDD;;AAkDA,eAAelB,cAAf","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { View, FlatList, Image, TouchableOpacity } from \"react-native\";\r\nimport { Button, Text } from \"react-native-elements\";\r\nimport { Context as EpisodeContext } from \"../contexts/EpisodeContext\";\r\n\r\nconst EpisodesScreen = ({ navigation }) => {\r\n  const { fetchEpisodes, state } = useContext(EpisodeContext);\r\n\r\n  useEffect(() => {\r\n    fetchEpisodes();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      \r\n      {state.episodes.length > 0 ? (\r\n        <FlatList\r\n        data={state.episodes}\r\n        keyExtractor={(item) => item.episode}\r\n        renderItem={({ item }) => {\r\n          return <TouchableOpacity onPress={() => navigation.navigate(\"EpisodeDetail\")}>\r\n          <View style={{ alignItems: \"center\",marginVertical:5}}>\r\n            <View\r\n              style={{\r\n                margin: 5,\r\n                padding: 10,\r\n              }}\r\n            >\r\n              <Image\r\n                style={{ width: 250, height: 73 }}\r\n                source={{\r\n                  uri: \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b1/Rick_and_Morty.svg/320px-Rick_and_Morty.svg.png\",\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Text h4>{item.name}</Text>\r\n              <Text>{item.episode}</Text>\r\n              <Text>{item.air_date}</Text>\r\n            </View>\r\n          </View>\r\n        </TouchableOpacity>;\r\n        }}\r\n      />\r\n        \r\n      ) : null}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default EpisodesScreen;\r\n"]},"metadata":{},"sourceType":"module"}